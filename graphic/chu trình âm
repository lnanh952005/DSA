#include <bits/stdc++.h>
using namespace std;
#define faster() {ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);}
struct edge{
	int x,y,w;	
};
vector <edge> canh;
int n,m;
void nhap(){
	cin >> n >> m;
	for(int i=1;i<=m;i++){
		int x,y,w; cin >> x >> y >> w;
		canh.push_back({x,y,w});
	}
}
void Ford(){
	vector <int> d(n+1,1e9);
	d[1] = 0;
	for(int i=0;i<n-1;i++){
		for(auto it : canh){
			int u = it.x, v = it.y;
			int w = it.w; 
			if(d[v] > d[u] + w){
				d[v] = min(d[v] ,d[u] + w);
			}
		}
	}
	bool check = true;
	for(auto it : canh){
		int u = it.x, v = it.y;
		int w = it.w; 
		if(d[v] > d[u] + w){
			check = false;
		}
	}
	if(check){
	    cout << 0 << endl;
	}
	else cout << 1 << endl;
}
int main(){
    faster();
	int t; cin >> t;
	while(t--){
		nhap();
		Ford();
		canh.clear();
	}
}
