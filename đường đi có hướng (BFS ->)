#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector <int> ke[1001];
int vst[1001];
int parent[1001];
int n,m,s,t;
void nhap(){
	cin >> n >> m >> s >> t;
	for(int i=0;i<m;i++){
		int x,y; cin >> x >> y;
		ke[x].push_back(y);
	}
}
void rs(){
	for(int i=1;i<=n;i++){
		ke[i].clear();
	}
	memset(vst,0,sizeof(vst));
	memset(parent,0,sizeof(parent));
}
void BFS(int u){
	vst[u] = 1;
	queue <int> q;
	q.push(u);
	while(q.size()){
		int x = q.front(); q.pop();
		for(int v : ke[x]){
			if(!vst[v]){
				vst[v] = 1;
				parent[v] = x;
				q.push(v);
			}
		}
	}
}
int main() {
	int q; cin >> q;
	while(q--){
		nhap();
		BFS(s);
		if(vst[t]){
			vector <int> kq;
			while(t != s){
				kq.push_back(t);
				t = parent[t];
			}
			kq.push_back(s);
			reverse(kq.begin(),kq.end());
			for(int i=0;i<kq.size();i++){
				cout << kq[i];
				if(i != kq.size()-1) cout << " -> "; 
			}
		}
		else cout <<-1;
		cout << endl;
		rs();
	}
}
