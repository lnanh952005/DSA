#include <bits/stdc++.h>
using namespace std;
vector <int> ke[1001];
int used[1001];
int parent[1001];
void DFS(int u) {
	used[u]=1;
	for(int v : ke[u]) {
		if(used[v]==0) {
			used[v]=1;
			parent[v] = u;
			DFS(v);
		}
	}
}
int main() {
	int t;
	cin >> t;
	while(t--) {
		int n,m,u,v; cin >> n >> m >> u >> v;
		while(m--){
			int x,y; cin >> x >> y;
			ke[x].push_back(y);
		}
		DFS(u);
		if(used[v]==0){
			cout << -1 ;
		}
		else{
			vector <int> kq;
			while(v!=u){
				kq.push_back(v);
				v = parent[v];
			}
			kq.push_back(u);
			sort(kq.begin(),kq.end());
			for(int x : kq){
				cout << x << " " ;
			}
		}
		cout << endl;
		for(int i=1;i<=n;i++) ke[i].clear();
		memset(used,0,sizeof(used));
		memset(parent,0,sizeof(parent));
	}
}
