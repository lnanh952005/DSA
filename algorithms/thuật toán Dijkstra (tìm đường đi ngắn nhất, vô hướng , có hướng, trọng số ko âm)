#include <bits/stdc++.h>
using namespace std;
vector <pair<int,int>> ke[1001];
int n,m,s;
void nhap(){
	cin >> n >> m >> s;
	for(int i=1;i<=m;i++){
		int x,y,w; cin >> x >> y >> w;
		ke[x].push_back({y,w});
		ke[y].push_back({x,w});
	}
}
void rs(){
	for(int i=1;i<=n;i++) ke[i].clear();
}
void Dijkstra(int s){
	vector <int> d(n+1,1e9);
	d[s] = 0;
	priority_queue <pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
	pq.push({0,s});
	while(pq.size()){
		auto top = pq.top(); pq.pop();
		int u = top.second, kc = top.first;
		if(kc > d[u]) continue;
		for(auto it : ke[u]){
			int v = it.first, w = it.second;
			if(d[v] > d[u] + w){
				d[v] = d[u] + w;
				pq.push({d[v],v});
			}
		}
	}
	for(int i=1;i<=n;i++){
		cout << d[i] <<" ";
	}
	cout << endl;
}
int main() {
	int t; cin >> t;
	while(t--){
		nhap();
		Dijkstra(s);
		rs();
	}
}
