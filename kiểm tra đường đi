#include <bits/stdc++.h>
using namespace std;
vector <int> ke[1001];
int used[1001];
void DFS(int u) {
	used[u]=1;
	for(int v : ke[u]) {
		if(used[v]==0) {
			used[v]=1;
			DFS(v);
		}
	}
}
int main() {
	int t;
	cin >> t;
	while(t--) {
		int n,m; cin >> n >> m;
		while(m--){
			int x,y; cin >> x >> y;
			ke[x].push_back(y);
			ke[y].push_back(x);
		}
		int q; cin >> q;
		while(q--){
		    memset(used,0,sizeof(used));
			int x,y; cin >> x >> y;
			DFS(x);
			if(used[y]==1){
				cout << "YES" << endl;
			}
			else{
				cout << "NO" << endl;
			}
		}
		for(int i=1;i<=n;i++) ke[i].clear();
	}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//CACH 2:  O(1)
#include <bits/stdc++.h>
using namespace std;
vector <int> ke[1001];
int used[1001];
int lienthong[1001];
int dem;
void DFS(int u) {
	used[u]=1;
	lienthong[u]=dem;
	for(int v : ke[u]) {
		if(used[v]==0) {
			used[v]=1;
			DFS(v);
		}
	}
}
int main() {
	int t;
	cin >> t;
	while(t--) {
		dem=0;
		int n,m; cin >> n >> m;
		while(m--){
			int x,y; cin >> x >> y;
			ke[x].push_back(y);
			ke[y].push_back(x);
		}
		for(int i=1;i<=n;i++){
			if(used[i]==0){
				dem++;
				DFS(i);
			}
		}
		int q; cin >> q;
		while(q--){
			int x,y; cin >> x >> y;
			if(lienthong[x] == lienthong[y]){
				cout << "YES" << endl;
			}
			else{
				cout << "NO" << endl;
			}
		}
		for(int i=1;i<=n;i++) ke[i].clear();
		memset(used,0,sizeof(used));
	}
}
